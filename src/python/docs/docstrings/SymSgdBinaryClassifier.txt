    """

    Train an symbolic SGD model.

    .. remarks::
        Stochastic gradient descent (SGD) is a well known method for
        regression and classification
        tasks, and is primarily a sequential algorithm. The
        ``SymSgdBinaryClassifier`` is an
        implementation of a parallel SGD algorithm that, to a first-order
        approximation, retains the
        sequential semantics of SGD. Each thread learns a local model as well
        a `model combiner`
        which allows local models to be combined to to produce what a
        sequential model would have
        produced.



        **Reference**
    
            `Parallel Stochastic Gradient Descent with Sound Combiners
            <https://arxiv.org/pdf/1705.08030.pdf>`_
    

    :param feature: see `Columns </nimbusml/concepts/columns>`_.

    :param label: see `Columns </nimbusml/concepts/columns>`_.

    :param normalize: Specifies the type of automatic normalization used:

        * ``"Auto"``: if normalization is needed, it is performed
          automatically. This is the default choice.
        * ``"No"``: no normalization is performed.
        * ``"Yes"``: normalization is performed.
        * ``"Warn"``: if normalization is needed, a warning
          message is displayed, but normalization is not performed.

        Normalization rescales disparate data ranges to a standard scale.
        Feature
        scaling insures the distances between data points are proportional
        and
        enables various optimization methods such as gradient descent to
        converge
        much faster. If normalization is performed, a ``MaxMin`` normalizer
        is
        used. It normalizes values in an interval [a, b] where ``-1 <= a <=
        0``
        and ``0 <= b <= 1`` and ``b - a = 1``. This normalizer preserves
        sparsity by mapping zero to zero.


    .. seealso::
        :py:class:`LogisticRegressionBinaryClassifier
        <nimbusml.linear_model.LogisticRegressionBinaryClassifier>`,
        :py:class:`SgdBinaryClassifier
        <nimbusml.linear_model.SgdBinaryClassifier>`,
        :py:class:`FastLinearBinaryClassifier
        <nimbusml.linear_model.FastLinearBinaryClassifier>`


    .. index:: models, parallel, SGD, symbolic

    Example:
       .. literalinclude:: /../nimbusml/examples/SymSgdBinaryClassifier.py
              :language: python
    """